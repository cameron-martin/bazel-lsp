From 94f75db5453463f1245a9003c689e5c9d1342191 Mon Sep 17 00:00:00 2001
From: Lining Pan <lining_pan@outlook.com>
Date: Sun, 8 Jun 2025 17:59:58 -0400
Subject: [PATCH 1/3] feat: reorder the target parameter in zig wrapper

---
 toolchain/zig-wrapper.zig | 23 ++++++++++++++---------
 1 file changed, 14 insertions(+), 9 deletions(-)

diff --git a/toolchain/zig-wrapper.zig b/toolchain/zig-wrapper.zig
index d1d59f9..5ccaede 100644
--- a/toolchain/zig-wrapper.zig
+++ b/toolchain/zig-wrapper.zig
@@ -142,9 +142,9 @@ fn spawnWindows(arena: mem.Allocator, params: ExecParams) u8 {
     proc.env_map = &params.env;
     const ret = proc.spawnAndWait() catch |err|
         return fatal(
-        "error spawning {s}: {s}\n",
-        .{ params.args.items[0], @errorName(err) },
-    );
+            "error spawning {s}: {s}\n",
+            .{ params.args.items[0], @errorName(err) },
+        );
 
     switch (ret) {
         .Exited => |code| return code,
@@ -227,17 +227,22 @@ fn parseArgs(
 
     switch (run_mode) {
         .wrapper => {},
-        .arg1 => try args.appendSlice(arena, &[_][]const u8{arg0_noexe}),
-        .cc => |target| try args.appendSlice(arena, &[_][]const u8{
-            arg0_noexe,
-            "-target",
-            target,
-        }),
+        .arg1, .cc => try args.appendSlice(arena, &[_][]const u8{arg0_noexe}),
     }
 
     while (argv_it.next()) |arg|
         try args.append(arena, arg);
 
+    // Add -target as the last parameter. The wrapper should overwrite
+    // the target specified by other tools calling the wrapper.
+    // Some tools might pass LLVM target triple, which are rejected by zig.
+    if (run_mode == RunMode.cc) {
+        try args.appendSlice(arena, &[_][]const u8{
+            "-target",
+            run_mode.cc,
+        });
+    }
+
     return ParseResults{ .exec = .{ .args = args, .env = env } };
 }
 

From b7a24fa7bf7c8adc10aaa08914d22df24ac706b2 Mon Sep 17 00:00:00 2001
From: Lining Pan <lining_pan@outlook.com>
Date: Fri, 13 Jun 2025 10:35:42 -0400
Subject: [PATCH 2/3] fix: fixed zig wrapper unit tests

---
 toolchain/zig-wrapper.zig | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/toolchain/zig-wrapper.zig b/toolchain/zig-wrapper.zig
index 5ccaede..f1d4912 100644
--- a/toolchain/zig-wrapper.zig
+++ b/toolchain/zig-wrapper.zig
@@ -5,7 +5,7 @@
 //
 // In simple cases it is usually enough to:
 //
-//      zig c++ -target <triple> <...>
+//      zig c++ <...> -target <triple>
 //
 // However, there are some caveats:
 //
@@ -236,6 +236,7 @@ fn parseArgs(
     // Add -target as the last parameter. The wrapper should overwrite
     // the target specified by other tools calling the wrapper.
     // Some tools might pass LLVM target triple, which are rejected by zig.
+    // https://github.com/uber/hermetic_cc_toolchain/issues/222
     if (run_mode == RunMode.cc) {
         try args.appendSlice(arena, &[_][]const u8{
             "-target",
@@ -368,11 +369,11 @@ test "zig-wrapper:parseArgs" {
                         "tools" ++ sep ++ "x86_64-linux-musl" ++ sep ++
                             ".." ++ sep ++ ".." ++ sep ++ "zig" ++ EXE,
                         "c++",
-                        "-target",
-                        "x86_64-linux-musl",
                         "main.c",
                         "-o",
                         "/dev/null",
+                        "-target",
+                        "x86_64-linux-musl",
                     },
                     .env_zig_lib_dir = "tools" ++ sep ++ "x86_64-linux-musl" ++
                         sep ++ ".." ++ sep ++ ".." ++ sep ++ "lib",
@@ -412,11 +413,11 @@ test "zig-wrapper:parseArgs" {
                     .args = &[_][:0]const u8{
                         "external" ++ sep ++ "zig_sdk" ++ sep ++ "zig" ++ EXE,
                         "c++",
-                        "-target",
-                        "x86_64-linux-gnu.2.28",
                         "main.c",
                         "-o",
                         "/dev/null",
+                        "-target",
+                        "x86_64-linux-gnu.2.28",
                     },
                     .env_zig_lib_dir = "external" ++ sep ++ "zig_sdk" ++
                         sep ++ "lib",

From d9b8b8caad7c248f1cac1378545114fd8018f161 Mon Sep 17 00:00:00 2001
From: Lining Pan <lining_pan@outlook.com>
Date: Fri, 13 Jun 2025 11:06:55 -0400
Subject: [PATCH 3/3] fmt: fix format difference

---
 toolchain/zig-wrapper.zig | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/toolchain/zig-wrapper.zig b/toolchain/zig-wrapper.zig
index f1d4912..823ed79 100644
--- a/toolchain/zig-wrapper.zig
+++ b/toolchain/zig-wrapper.zig
@@ -142,9 +142,9 @@ fn spawnWindows(arena: mem.Allocator, params: ExecParams) u8 {
     proc.env_map = &params.env;
     const ret = proc.spawnAndWait() catch |err|
         return fatal(
-            "error spawning {s}: {s}\n",
-            .{ params.args.items[0], @errorName(err) },
-        );
+        "error spawning {s}: {s}\n",
+        .{ params.args.items[0], @errorName(err) },
+    );
 
     switch (ret) {
         .Exited => |code| return code,